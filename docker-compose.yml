

services:

  order-db:
    container_name: order-db
    image: mcr.microsoft.com/mssql/server
    restart: always   
    environment:
      SA_PASSWORD: Jau12345*
      ACCEPT_EULA: Y
    ports:
      - "1433:1433"

  messagebroker:
    container_name: messagebroker
    image: rabbitmq:management    
    hostname: ecomerce-mq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq
      - ./rabbitmq/logs:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  catalog-db:
    container_name: catalog-db
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: CatalogDB
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./posgres/catalog-db:/var/lib/postgresql/data

  basket-db:
    container_name: basket-db
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: BasketDB
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - ./posgres/basket-db:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    depends_on:
      - catalog-db
      - basket-db
    ports:
      - "5174:80"
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_USERNAME}
      PGADMIN_DEFAULT_PASSWORD: ${PG_PASSWORD}
    restart: always

  redis_basket:
    container_name: redis_basket
    image: redis
    ports:
      - "6379:6379"
    restart: always

  catalog-api:
    container_name: catalog-api
    image: catalog-api
    depends_on:
       - catalog-db
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=development
      - ADPNETCORE_HTTPS_PORT=8080
      - ASPNETCORE_HTTP_PORT=8081
      - ConnectionStrings__DataBase=server=catalog-db;port=5432;database=CatalogDB;user id=postgres;password=postgres;include error detail=true;
    ports:
      - "6000:8080"
      - "6060:8081"

  basket-api:
    container_name: basket-api
    image: basket-api
    depends_on:
      - basket-db
      - redis_basket
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=development
      - ADPNETCORE_HTTPS_PORT=8080
      - ASPNETCORE_HTTP_PORT=8081
      - ConnectionStrings__DataBase=Server=basket-db;Port=5432;Database=BasketDB;User Id=postgres;Password=postgres;Include Error Detail=true;      
      - ConnectionStrings__Redis=redis_basket:6379
      - GrpcSettings=https://discount.grpc:8081
      - MessageBroker__Host=amqp://ecommerce-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
    ports:
      - "6080:8080"
      - "6081:8081"


  discount.grpc:
    image: discount.grpc
    container_name: discount-api
    build:
      context: .
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__DataBase=Data Source=discountDB;
    ports:
      - "6002:8080"
      - "6062:8081"


  ordering-api:
    image: ordering-api
    depends_on:
      - order-db
      - messagebroker
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=development
      - ADPNETCORE_HTTPS_PORT=8080
      - ASPNETCORE_HTTP_PORT=8081
      - ConnectionStrings__Database=Server=order-db;Database=Orderdb;User Id=sa;Password=Jau12345*;Encrypt=False;TrustServerCertificate=True;            
      - MessageBroker__Host=amqp://ecommerce-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
      - FeatureManagement__OrderFullfilment=true
    ports:
      - "6001:8080"
      - "6061:8081"

volumes:
  postgres_catalog:
  postgres_basket:


