

services:

  catalog-db:
    container_name: catalog-db
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: CatalogDB
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - ./posgres/catalog-db:/var/lib/postgresql/data

  basket-db:
    container_name: basket-db
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: BasketDB
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - ./posgres/basket-db:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    depends_on:
      - catalog-db
      - basket-db
    ports:
      - "5174:80"
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_USERNAME}
      PGADMIN_DEFAULT_PASSWORD: ${PG_PASSWORD}
    restart: always

  redis_basket:
    container_name: redis_basket
    image: redis
    ports:
      - "6379:6379"
    restart: always

  catalog-api:
    container_name: catalog-api
    depends_on:
       - catalog-db
    build:
      context: .
      dockerfile: services/catalog/catalog.api/dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=development
      - ADPNETCORE_HTTPS_PORT=8080
      - ASPNETCORE_HTTP_PORT=8081
      - ConnectionStrings__DataBase=server=catalog-db;port=5432;database=catalogdb;user id=postgres;password=postgres;include error detail=true;
    ports:
      - "6000:8080"
      - "6060:8081"

  basket-api:
    container_name: basket-api
    depends_on:
      - basket-db
      - redis_basket
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=development
      - ADPNETCORE_HTTPS_PORT=8080
      - ASPNETCORE_HTTP_PORT=8081
      - ConnectionStrings__DataBase=Server=basket-db;Port=5432;Database=BasketDB;User Id=postgres;Password=postgres;Include Error Detail=true;      
      - ConnectionStrings__Redis=redis_basket:6379
    ports:
      - "6001:8080"
      - "6061:8081"

  mongo-db:
    container_name: ${MONGO_DB_NAME}
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    restart: always
    command: ['--auth']

  mongo-express:
    depends_on:
      - mongo-db
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: ${MONGO_DB_NAME}



volumes:
  postgres_catalog:
  postgres_basket:
